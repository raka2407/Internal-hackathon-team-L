/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package psd2.hackathon;



import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;

import javax.swing.JWindow;

import org.apache.http.HttpHost;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.DefaultProxyRoutePlanner;
import org.json.JSONArray;
import org.json.JSONObject;


import java.util.Locale;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardPieToolTipGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.ui.ApplicationFrame;
/**
 *
 * @author AB62031
 */
public class AccountOverview extends javax.swing.JFrame {

   static double dnbAssetsPercent = 0;
   static double nordeaAssetsPercent = 0;
   static double bitcoinAssetsPercent = 0;
    
   static double dnbLiabilityPercent = 30;
   static double nordeaLiabilityPercent = 35;
   static double bitcoinLiabilityPercent = 35;
    static List accountNumberList;
    
   static JFrame jaccountOverviewFrame;
    /**
     * Creates new form AccountOverview
     */
    public AccountOverview() {
        initComponents();
        
        Color greenColor = new Color(0,102,102);
         
         
        this.getContentPane().setBackground(greenColor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jButton4 = new javax.swing.JButton();
        jAccountsButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jAssetsLabel = new javax.swing.JLabel();
        jLiabilitiesLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        jLabel4 = new javax.swing.JLabel();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(200, 200));
        setUndecorated(true);
        setResizable(false);

        jAccountsButton.setText("Profile");
        jAccountsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAccountsButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Planner");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Talk with Bank");

        jButton5.setText("Settings");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jAssetsLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jAssetsLabel.setForeground(new java.awt.Color(255, 255, 255));
        jAssetsLabel.setText("Assets");

        jLiabilitiesLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLiabilitiesLabel.setForeground(new java.awt.Color(255, 255, 255));
        jLiabilitiesLabel.setText("Liabilities");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Dashboard");

        jSeparator1.setPreferredSize(new java.awt.Dimension(70, 2));

        jSeparator2.setPreferredSize(new java.awt.Dimension(70, 2));

        jSeparator3.setPreferredSize(new java.awt.Dimension(70, 2));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Alerts");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Advice");

        label3.setFont(new java.awt.Font("Dialog", 0, 12));
        label3.setText("Revised Interest rates @ DNB");

        label4.setFont(new java.awt.Font("Dialog", 0, 12));
        label4.setText("EMI due for DNB HomeLoan on 15.Sep.2017");

        jLabel4.setText("Credit card bill of 12.000,- is due on 21.Sep.2017");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jAssetsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLiabilitiesLabel)
                .addGap(56, 56, 56))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jAccountsButton)
                        .addGap(0, 0, 0)
                        .addComponent(jButton2)
                        .addGap(0, 0, 0)
                        .addComponent(jButton3)
                        .addGap(0, 0, 0)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAssetsLabel)
                    .addComponent(jLiabilitiesLabel))
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(19, 19, 19)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAccountsButton)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton5)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(216, 216, 216)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(214, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(398, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(32, 32, 32)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(303, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(127, 127, 127)))
        );

        label3.setBackground(new Color(0,102,102));

        label3.setForeground(new Color(255,255,255));
        label4.setBackground(new Color(0,102,102));
        label4.setForeground(new Color(255,255,255));
        jLabel4.setForeground(new Color(255,255,255));

        jLabel4.setBackground(new Color(0,102,102));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAccountsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAccountsButtonActionPerformed
        MyProfile myProfileFrame = new MyProfile();
        myProfileFrame.setVisible(true);
        myProfileFrame.setLocationRelativeTo(null);
   
  
    }//GEN-LAST:event_jAccountsButtonActionPerformed

    public static void displayAccountOverview() {
        // Call Customer Accounts API - START
   
 //String url = "https://dnbapistore.com/hackathon/accounts/1.0/account/customer/" + customerID;
 String url = "https://dnbapistore.com/hackathon/accounts/1.0/account/customer/27118632747";
//        String originalURL = "https://dnbapistore.com/hackathon/accounts/1.0/account?accountNumber=12083082828&customerID=09077675402&dateFrom=23082016&dateTo=23082017";
        HttpGet getRequest = new HttpGet(url);
			
			getRequest.addHeader("Accept", "application/json");
			getRequest.addHeader("Authorization", "Bearer 81ac5011-d4fc-3fc9-95a1-c1520ad3e060");
			
			
			HttpHost proxy = new HttpHost("proxy.drf01.net", 88);
			DefaultProxyRoutePlanner routePlanner = new DefaultProxyRoutePlanner(proxy);
			CloseableHttpClient httpClient = HttpClients.custom().setRoutePlanner(routePlanner).build();
			
			
    // Create an instance of HttpClient.
	  
			
			
			try {
				JSONObject configObject = null;
				HttpResponse response = httpClient.execute(getRequest);
				
				
				BufferedReader br = new BufferedReader(
		                         new InputStreamReader((response.getEntity().getContent())));

				String output;
				
				Double savingsTotalBalance = 0.0;
				Double currentTotalBalance = 0.0;
				Double dnbTotalBalance = 0.0;
				
				//Hardcoded total balance from other banks 
				Double nordeaTotalBalance = 50000.0;
				Double bitcoinTotalBalance = 20000.0;
				
				Double totalAssets = 0.0;
				System.out.println("Output from Server .... \n");
				while ((output = br.readLine()) != null) {
					configObject = new JSONObject(output);
					
					
					JSONArray transactionDetails = (JSONArray) configObject.get("accounts");
                                        accountNumberList = new ArrayList();
					for(int i = 0; i < transactionDetails.length(); i++){
						JSONObject accounts = transactionDetails.getJSONObject(i);
						if(accounts.get("accountType").toString().equalsIgnoreCase("Current")){
							currentTotalBalance = currentTotalBalance + (Double) accounts.get("availableBalance");
                                                        accountNumberList.add(accounts.get("accountNumber"));
						}
						if(accounts.get("accountType").toString().equalsIgnoreCase("Savings")){
							savingsTotalBalance = savingsTotalBalance + (Double) accounts.get("availableBalance");
                                                        accountNumberList.add(accounts.get("accountNumber"));
						}
						 
						
					}
					dnbTotalBalance = currentTotalBalance + savingsTotalBalance;
					totalAssets = dnbTotalBalance + nordeaTotalBalance + bitcoinTotalBalance;
					System.out.println("Current total balance is" + currentTotalBalance);
					System.out.println("Savings total balance is" + savingsTotalBalance);
					System.out.println("DNB total balance is" + dnbTotalBalance);
					System.out.println("Total Assets" + totalAssets);
                                        System.out.println("Total Accounts List size" + accountNumberList.size());
			

				}
				
				httpClient.getConnectionManager().shutdown();
				
				//Percentage Calculation
				
				
				
				dnbAssetsPercent = (dnbTotalBalance/totalAssets)*100;
				nordeaAssetsPercent = (nordeaTotalBalance/totalAssets)*100;
				bitcoinAssetsPercent = (bitcoinTotalBalance/totalAssets)*100;
				
				System.out.println("DNB % is" + dnbAssetsPercent);
				System.out.println("Nordea % is" + nordeaAssetsPercent);
				System.out.println("Bitcoin % is " + bitcoinAssetsPercent);
                                
                                
				
			} catch (ClientProtocolException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
   
    // Call Customer Accounts API - END
        
   
             
         
   /**
 * A pie chart with no section labels.
 */
  class PieChartDemo5 extends ApplicationFrame {

    private Locale locale;
    
    

	/**
     * Creates a new demo instance.
     *
     * @param title  the frame title.
     */
    public PieChartDemo5(final String title) {
        super(title);
        final PieDataset assetsDataset = createDataset();
        final PieDataset liabilitiesDataset = createDataset1();
        final JFreeChart assetsChart = createChart(assetsDataset);
        final JFreeChart liabilitiesChart = createChart(liabilitiesDataset);
        final ChartPanel assetsChartPanel = new ChartPanel(assetsChart);
        final ChartPanel liabilitiesChartPanel = new ChartPanel(liabilitiesChart);
        assetsChartPanel.setPreferredSize(new java.awt.Dimension(500, 270));
        liabilitiesChartPanel.setPreferredSize(new java.awt.Dimension(500, 270));
        
        JWindow jAssetsWindow = new JWindow();
        jAssetsWindow.setContentPane(assetsChartPanel);
        jAssetsWindow.setSize(150, 150);
        jAssetsWindow.setVisible(true);
        jAssetsWindow.setBounds(540, 155, 120, 120);
        
        
        
        JWindow jLiabilitiesWindow = new JWindow();
        jLiabilitiesWindow.setContentPane(liabilitiesChartPanel);
        jLiabilitiesWindow.setSize(150, 150);
        jLiabilitiesWindow.setVisible(true);
        jLiabilitiesWindow.setBounds(680, 155, 120, 120);
        
        //this.add(jLiabilitiesWindow);
        //this.setVisible(true);

        
        assetsChartPanel.addChartMouseListener(new ChartMouseListener() {

        public void chartMouseClicked(ChartMouseEvent e) {
            System.out.println(e.getEntity());
            if(e.getEntity().toString().contains("DNB")){
                System.out.println("Clicked DNB");
                AccountDetails accountDetailsFrame = new AccountDetails();
                AccountDetails.displayAccountDetails("0");
                accountDetailsFrame.setVisible(true);
                accountDetailsFrame.setLocationRelativeTo(null);
                
               
               
                
            }
            if(e.getEntity().toString().contains("Nordea")){
                System.out.println("Clicked Nordea");
                AccountDetails accountDetailsFrame = new AccountDetails();
                AccountDetails.displayAccountDetails("1");
                accountDetailsFrame.setVisible(true);
                accountDetailsFrame.setLocationRelativeTo(null);
            }
            if(e.getEntity().toString().contains("Crypto")){
                System.out.println("Clicked Crypto");
            }
        }

        public void chartMouseMoved(ChartMouseEvent e) {}

    });
        }

    /**
     * Creates a sample dataset.
     * 
     * @return a sample dataset.
     */
    private PieDataset createDataset() {
        final DefaultPieDataset assetsDataset = new DefaultPieDataset();
        assetsDataset.setValue("DNB", dnbAssetsPercent);
        assetsDataset.setValue("Nordea", nordeaAssetsPercent);
        assetsDataset.setValue("Crypto", bitcoinAssetsPercent);
       
        return assetsDataset;        
    }
    
     /**
     * Creates a sample dataset.
     * 
     * @return a sample dataset.
     */
    private PieDataset createDataset1() {
        final DefaultPieDataset liabilitiesDataset = new DefaultPieDataset();
        liabilitiesDataset.setValue("Loans", new Double(30));
        liabilitiesDataset.setValue("Credits", new Double(34.0));
        liabilitiesDataset.setValue("Others", new Double(36.0));
        
       
        return liabilitiesDataset;        
    }
    
    // ****************************************************************************
    // * JFREECHART DEVELOPER GUIDE                                               *
    // * The JFreeChart Developer Guide, written by David Gilbert, is available   *
    // * to purchase from Object Refinery Limited:                                *
    // *                                                                          *
    // * http://www.object-refinery.com/jfreechart/guide.html                     *
    // *                                                                          *
    // * Sales are used to provide funding for the JFreeChart project - please    * 
    // * support us so that we can continue developing free software.             *
    // ****************************************************************************
    
    /**
     * Creates a chart.
     * 
     * @param dataset  the dataset.
     * 
     * @return a chart.
     */
    private JFreeChart createChart(final PieDataset assetsDataset) {
        
        final JFreeChart chart = ChartFactory.createPieChart(
            "",  // chart title
            assetsDataset,             // data
            false,               // include legend
            true,
            false
        );

        final PiePlot plot = (PiePlot) chart.getPlot();
        plot.setInteriorGap(0.0);
        plot.setLabelGenerator(null);
        boolean tooltips = true;
		if (tooltips ) {
            plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale.getDefault()));
        }
        return chart;
        
        
    }
    
   
        
      
    }
    
   /**
     * Starting point for the demonstration application.
     *
     * @param args  ignored.
     */
   

         PieChartDemo5 demo = new PieChartDemo5("Assets");
        //demo.pack();
        //RefineryUtilities.centerFrameOnScreen(demo);
   }
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
          
      
      SettingsJFrame settingsJFrame = new SettingsJFrame();   
      settingsJFrame.setVisible(true); 
      settingsJFrame.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      MonthlyPlanner monthlyPlannerJFrame = new MonthlyPlanner();   
      monthlyPlannerJFrame.setVisible(true); 
      monthlyPlannerJFrame.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountOverview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountOverview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountOverview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountOverview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jaccountOverviewFrame = new AccountOverview();
                jaccountOverviewFrame.setVisible(true);
                jaccountOverviewFrame.setLocationRelativeTo(null);
                displayAccountOverview();
                              
                
               
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jAccountsButton;
    private javax.swing.JLabel jAssetsLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLiabilitiesLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSplitPane jSplitPane2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    // End of variables declaration//GEN-END:variables
}


